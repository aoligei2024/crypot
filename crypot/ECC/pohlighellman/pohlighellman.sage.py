
# This file was *autogenerated* from the file pohlighellman.sage
from sage.all_cmdline import *   # import sage library

_sage_const_210 = Integer(210); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_504 = Integer(504); _sage_const_76792255969188554519144464321650537182337412449605253325780015124365585152539 = Integer(76792255969188554519144464321650537182337412449605253325780015124365585152539); _sage_const_1213123123131 = Integer(1213123123131); _sage_const_233970423115425145524320034830162017933 = Integer(233970423115425145524320034830162017933); _sage_const_775807209463167910095539163959068826 = Integer(775807209463167910095539163959068826); _sage_const_88610873236405736097813831550942828314268128800347374801890968111325912062058 = Integer(88610873236405736097813831550942828314268128800347374801890968111325912062058); _sage_const_27543889954945113502256551007964501073506795938025836235838339960818915950890 = Integer(27543889954945113502256551007964501073506795938025836235838339960818915950890); _sage_const_238266381988261346751878607720968495 = Integer(238266381988261346751878607720968495); _sage_const_84442469965344 = Integer(84442469965344); _sage_const_727 = Integer(727); _sage_const_1234123412 = Integer(1234123412); _sage_const_591153005086204165523829267245014771 = Integer(591153005086204165523829267245014771); _sage_const_512 = Integer(512); _sage_const_75922969573987021583641685217441284832467954055295272505357185824478295962572 = Integer(75922969573987021583641685217441284832467954055295272505357185824478295962572); _sage_const_889774351128949770355298446172353873 = Integer(889774351128949770355298446172353873); _sage_const_67890 = Integer(67890); _sage_const_829 = Integer(829); _sage_const_108453893951105886914206677306984937223705600011149354906282902016584483568647 = Integer(108453893951105886914206677306984937223705600011149354906282902016584483568647); _sage_const_341454032985370081366658659122300896 = Integer(341454032985370081366658659122300896); _sage_const_12345 = Integer(12345); _sage_const_100 = Integer(100); _sage_const_1234 = Integer(1234); _sage_const_95051 = Integer(95051)
def pohlighellman(ec,P,Q):
    n = P.order()
    factors = list(factor(n))
    li = []
    modi = []
    for p,e in factors[:-_sage_const_1 ]:
        P0 = (n//p) * P
        z = []
        for i in range(e):
            multiplier = (n // (p**(i+_sage_const_1 )))
            BASE = Q
            for j in range(len(z)):
                BASE -= z[j] * (p**j) * P
            Q0 = multiplier * BASE
            z.append(P0.discrete_log(Q0))
        l0 = _sage_const_0 
        for i in range(e):
            l0 += z[i] * (p**i)
        li.append(l0)
        modi.append(p**e)

    return crt(li,modi)

def test():
    ## Parameters from "Alice Sends Bob a meme"
    p = _sage_const_108453893951105886914206677306984937223705600011149354906282902016584483568647 
    a = _sage_const_829 
    b = _sage_const_512 

    # Curve is y^2 = X^3 + ax^2 + b
    # this is different from the normal curve
    ec = EllipticCurve(GF(p),[_sage_const_0 ,a,_sage_const_0 ,b,_sage_const_0 ])
    P = (_sage_const_88610873236405736097813831550942828314268128800347374801890968111325912062058 , _sage_const_76792255969188554519144464321650537182337412449605253325780015124365585152539 )
    Q = (_sage_const_27543889954945113502256551007964501073506795938025836235838339960818915950890 , _sage_const_75922969573987021583641685217441284832467954055295272505357185824478295962572 )
    P = ec(P)
    Q = ec(Q)
    l_bound = _sage_const_84442469965344 
    l = pohlighellman(ec,P,Q)
    print l,l==_sage_const_1213123123131 

def test2():
    ## Parameters from "Cryptopals Challenge 59"
    p = _sage_const_233970423115425145524320034830162017933 
    a = -_sage_const_95051 
    b_list = [_sage_const_210 ,_sage_const_504 ,_sage_const_727 ][-_sage_const_1 :]

    ## Curve is y^2 = x^3 + ax + b
    for b in b_list:
        ec = EllipticCurve(GF(p),[a,b])

        P = ec.random_point()
        import random
        for _ in range(_sage_const_100 ):
            l = random.randint(_sage_const_1234 ,_sage_const_1234123412 )
            Q = l*P
            res = pohlighellman(ec,P,Q)
            print res,res == l

def test3():
    ## Parameters from multiplier 1 hack.lu'18
    param = {   "hacklu":
            ((_sage_const_889774351128949770355298446172353873 , _sage_const_12345 , _sage_const_67890 ),
            # Generator of Subgroup of prime order 73 bits, 79182553273022138539034276599687 to be excact
            (_sage_const_238266381988261346751878607720968495 , _sage_const_591153005086204165523829267245014771 ),
            # challenge Q = xP, x random from [0, 79182553273022138539034276599687)
            (_sage_const_341454032985370081366658659122300896 , _sage_const_775807209463167910095539163959068826 )
            )
        }

    (p, a, b), (px, py), (qx, qy) = param["hacklu"]
    E = EllipticCurve(GF(p), [a, b])
    P = E((px, py))
    Q = E((qx, qy))
    print pohlighellman(E,P,Q)


test()
test2()
#test3()

